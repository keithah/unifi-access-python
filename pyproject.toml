[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "unifi-access-python"
version = "1.0.0"
description = "A comprehensive Python SDK for the UniFi Access API"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Keith Hadley", email = "keith@hadm.net"}
]
maintainers = [
    {name = "Keith Hadley", email = "keith@hadm.net"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["unifi", "access", "security", "door", "control", "api", "sdk"]
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.8.0",
    "aiofiles>=0.8.0",
    "threefive>=3.0.59",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
test = [
    "pytest>=6.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/keithah/unifi-access-python"
Repository = "https://github.com/keithah/unifi-access-python.git"
Documentation = "https://github.com/keithah/unifi-access-python/blob/main/README.md"
"Bug Reports" = "https://github.com/keithah/unifi-access-python/issues"
Changelog = "https://github.com/keithah/unifi-access-python/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["unifi_access*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["unifi_access"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
